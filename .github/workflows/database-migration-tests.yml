name: Database migration tests

on:
  push:
    paths:
      - ".github/workflows/database-migration-tests.yml"
      - "database/**"

jobs:
  # https://github.com/dorny/paths-filter
  detect-code-changes:
    runs-on: ubuntu-latest
    outputs:
      ci: ${{ steps.filter.outputs.ci }}
      test-db: ${{ steps.filter.outputs.deployment }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ github.ref_name }}
          filters: |
            ci:
              - '.github/workflows/database-migration-tests.yml'
            test-db:
              - 'database/test/**'
  validate-test-db:
    runs-on: ubuntu-latest
    needs: [detect-code-changes]
    if: ${{ needs.detect-code-changes.outputs.test-db == 'true' || needs.detect-code-changes.outputs.ci == 'true' }}
    env:
      USER_PASSWORD: test_password
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.2"
      - name: Setup postgresql
        uses: ikalnytskyi/action-setup-postgres@v7
        id: postgres
      - name: Create user
        # https://github.com/ikalnytskyi/action-setup-postgres?tab=readme-ov-file#recommended
        run: |
          psql ${{ steps.postgres.outputs.connection-uri }} -v user_password=$USER_PASSWORD -f ./database/test/db_user_create.sql
      - name: Create database
        run: |
          psql ${{ steps.postgres.outputs.connection-uri }} -f ./database/test/db_create.sql
      - name: Install migrate tool
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - name: Migrate schema up
        # https://github.com/actions/runner/issues/1126
        # https://community.grafana.com/t/grafana-crashes-when-trying-to-connect-to-postgres-panic-setting-pgservicefile-not-supported/46527
        run: |
          unset PGSERVICEFILE
          migrate -path database/test/migrations -database ${{ steps.postgres.outputs.connection-uri }} up
      - name: Migrate schema down
        run: |
          unset PGSERVICEFILE
          migrate -path database/test/migrations -database ${{ steps.postgres.outputs.connection-uri }} down -all
